from collections import deque
def bfs(n, m, num):
    q = deque()
    q.append(num)
    result = []    
    while q:
        step_num = q.popleft()       
        if n <= step_num <= m:
            result.append(step_num)        
        if step_num == 0 or step_num > m:
            continue       
        last_digit = step_num % 10      
        if last_digit < 9:
            next_step_num = step_num * 10 + (last_digit + 1)
            q.append(next_step_num)
        
        if last_digit > 0:
            next_step_num = step_num * 10 + (last_digit - 1)
            q.append(next_step_num)   
    return result
def findSteppingNumbers(n, m):
    result = []   
    for i in range(10):
        result.extend(bfs(n, m, i)) 
    return sorted(result)
n, m = map(int, input().split())
stepping_numbers = findSteppingNumbers(n, m)
print("Stepping Numbers:", *stepping_numbers)
